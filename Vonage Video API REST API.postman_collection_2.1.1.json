{
	"info": {
		"_postman_id": "00a67a56-8e56-4f2a-91fd-daf6add8ec96",
		"name": "Vonage Video API REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Session creation, signaling, and moderation",
			"item": [
				{
					"name": "1-Creating a session",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"value": "{{jwt}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}/session/create",
							"host": [
								"{{opentokBaseUrl}}"
							],
							"path": [
								"session",
								"create"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "2-Sending a signal from your app server to connected clients",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"value": "{{jwt}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ($PROJECT_ID: Int!, $START_TIME: Date!) {\n    project(projectId: $PROJECT_ID) {\n      projectData(\n      start: $START_TIME,\n      interval: AUTO,\n      sdkType: [JS, IOS, ANDROID],\n      groupBy: [SDK_TYPE]\n          ) {\n        resources {\n          sdkType\n          intervalStart\n          intervalEnd\n          usage {\n            streamedPublishedMinutes\n            streamedSubscribedMinutes\n          }\n        }\n      }\n    }\n}",
								"variables": "{\n    \"PROJECT_ID\": {{projectApiKey}},\n    \"START_TIME\": \"2019-01-01T08:00:00.000Z\"\n}"
							}
						},
						"url": {
							"raw": "https://insights.opentok.com/graphql",
							"protocol": "https",
							"host": [
								"insights",
								"opentok",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "2-Signal a specific client connected to the session",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"value": "{{jwt}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\" : \"boo\",\n    \"data\" : \"foo\"\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/session/{{sessionId}}/connection/{{connectionId}}/signal",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"session",
								"{{sessionId}}",
								"connection",
								"{{connectionId}}",
								"signal"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "3-Forcing a client endpoint to disconnect from a session",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/session/{{sessionId}}/connection/{{connectionId}}",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"session",
								"{{sessionId}}",
								"connection",
								"{{connectionId}}"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "4-Getting stream information",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/session/{{sessionId}}/stream/op:{{streamId}}",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"session",
								"{{sessionId}}",
								"stream",
								"op:{{streamId}}"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "5-Forcing a single stream to mute published audio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"value": "{{jwt}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\" : \"boo\",\n    \"data\" : \"foo\"\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/session/{{sessionId}}/stream/{{streamId}}/mute",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"session",
								"{{sessionId}}",
								"stream",
								"{{streamId}}",
								"mute"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "6-Forcing streams in a session to mute published audio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"value": "{{jwt}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"active\": true,\n  \"excludedStreamIds\": [\n    \"excludedStreamId1\",\n    \"excludedStreamId2\"\n  ]\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/session/{{sessionId}}/mute",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"session",
								"{{sessionId}}",
								"mute"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				}
			]
		},
		{
			"name": "Archiving",
			"item": [
				{
					"name": "1-Starting an archive recording",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sessionId\" : \"{{sessionId}}\",\r\n    \"hasAudio\" : true,\r\n    \"hasVideo\" : true,\r\n    \"layout\" : {\r\n      \"type\": \"custom\" | \"bestFit\" | \"horizontalPresentation\" | \"pip\" | \"verticalPresentation\",\r\n      \"stylesheet\": \"the layout stylesheet (only used with type == custom)\",\r\n      \"screenshareType\": \"the layout type to use when there is a screen-sharing stream (optional)\"\r\n    },\r\n    \"name\" : \"archive_name\",\r\n    \"outputMode\" : \"composed\",\r\n    \"resolution\" : \"640x480\",\r\n    \"streamMode\" : \"auto\"\r\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/archive",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"archive"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "2-Stopping an archive recording",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/archive/{{archiveId}}/stop",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"archive",
								"{{archiveId}}",
								"stop"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "3-Listing archives",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/archive",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"archive"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "4-Retrieving archive information",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/archive/{{archiveId}}",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"archive",
								"{{archiveId}}"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "5-Deleting an archive",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/archive/{{archiveId}}",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"archive",
								"{{archiveId}}"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "6-Specify an S3 or Azure upload target for a project's archive files",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"s3\",\n    \"config\": {\n        \"accessKey\":\"myUsername\",\n        \"secretKey\":\"myPassword\",\n        \"bucket\": \"bucketName\",\n        \"endpoint\": \"http://s3.cloudianhyperstore.com\"\n    },\n    \"fallback\":\"none\"\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/archive/storage",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"archive",
								"storage"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "7-Deleting an upload target for a project's archive files",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/archive/storage",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"archive",
								"storage"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "8-Dynamically changing the layout type of a composed archive",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"custom\" | \"bestFit\" | \"horizontalPresentation\" | \"pip\" | \"verticalPresentation\",\n  \"screenshareType\": \"optional layout type to use when there is a screen-sharing stream\",\n  \"stylesheet\": \"the layout stylesheet (only used with type == custom)\"\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/archive/{{archiveId}}/layout",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"archive",
								"{{archiveId}}",
								"layout"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "9-Changing the composed archive layout classes for an OpenTok stream",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"id\": \"8b732909-0a06-46a2-8ea8-074e64d43422\",\n      \"layoutClassList\": [\"full\"]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/session/{{sessionId}}/stream",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"session",
								"{{sessionId}}",
								"stream"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "10-Selecting streams to be included in an archive",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addStream\": \"6f31df1e-0148-464a-9d9c-a25160e178a7\",\n  \"hasAudio\": true,\n  \"hasVideo\": false\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/archive/{{archiveId}}/streams",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"archive",
								"{{archiveId}}",
								"streams"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				}
			]
		},
		{
			"name": "SIP interconnect",
			"item": [
				{
					"name": "1-Initiating a SIP call",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sessionId\": \"{{sessionId}}\",\r\n  \"token\": \"{{token}}\",\r\n  \"sip\": {\r\n    \"uri\": \"sip:user@sip.partner.com;transport=tls\",\r\n    \"from\": \"from@example.com\",\r\n    \"headers\": {\r\n      \"headerKey\": \"headerValue\"\r\n    },\r\n    \"auth\": {\r\n      \"username\": \"username\",\r\n      \"password\": \"password\"\r\n    },\r\n    \"secure\": true|false,\r\n    \"video\": true|false,\r\n    \"observeForceMute\": true|false\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/dial",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"dial"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "2-Sending DTMF digits to SIP clients",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"digits\": \"1713\"\r\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/session{{sessionId}}/play-dtmf",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"session{{sessionId}}",
								"play-dtmf"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				}
			]
		},
		{
			"name": "Live streaming broadcasts",
			"item": [
				{
					"name": "1-Starting a live streaming broadcast",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sessionId\": \"{{sessionId}}\",\r\n  \"layout\": {\r\n    \"type\": \"custom\" | \"bestFit\" | \"horizontalPresentation\" | \"pip\" | \"verticalPresentation\",\r\n    \"stylesheet\": \"the layout stylesheet (only used with type == custom)\"\r\n  },\r\n  \"maxDuration\": 5400,\r\n  \"outputs\": {\r\n    \"hls\": {},\r\n    \"rtmp\": [{\r\n      \"id\": \"foo\",\r\n      \"serverUrl\": \"rtmps://myfooserver/myfooapp\",\r\n      \"streamName\": \"myfoostream\"\r\n    },\r\n    {\r\n      \"id\": \"bar\",\r\n      \"serverUrl\": \"rtmp://mybarserver/mybarapp\",\r\n      \"streamName\": \"mybarstream\"\r\n    }]\r\n  },\r\n  \"resolution\": \"640x480\"\r\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/broadcast",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"broadcast"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "2-Stopping a live streaming broadcast",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/broadcast/{{broadcastId}}/stop",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"broadcast",
								"{{broadcastId}}",
								"stop"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "3-Listing live streaming broadcasts",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/broadcast",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"broadcast"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "4-Getting information about a live streaming broadcast",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/broadcast/{{broadcastId}}",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"broadcast",
								"{{broadcastId}}"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "5-Dynamically changing the layout type during a live streaming broadcast",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"custom\" | \"bestFit\" | \"horizontalPresentation\" | \"pip\" | \"verticalPresentation\",\n  \"stylesheet\": \"the layout stylesheet (only used with type == custom)\",\n  \"screenshareType\": \"the layout type to use when there is a screen-sharing stream (optional)\"\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/broadcast/{{broadcastId}}/layout",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"broadcast",
								"{{broadcastId}}",
								"layout"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "6-Changing the live streaming layout classes for an OpenTok stream",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"id\": \"8b732909-0a06-46a2-8ea8-074e64d43422\",\n      \"layoutClassList\": [\"full\"]\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/session/{{sessionId}}/stream",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"session",
								"{{sessionId}}",
								"stream"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "7-Selecting streams to be included in a live streaming broadcast",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"addStream\": \"12312312-3811-4726-b508-e41a0f96c68f\",\n  \"hasAudio\": true,\n  \"hasVideo\": false\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/broadcast/{{broadcastId}}/streams",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"broadcast",
								"{{broadcastId}}",
								"streams"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				}
			]
		},
		{
			"name": "Account management",
			"item": [
				{
					"name": "1-Create a new project for your OpenTok account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "accountLevel",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Acme\"  // optional\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}/v2/project",
							"host": [
								"{{opentokBaseUrl}}"
							],
							"path": [
								"v2",
								"project"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "2-Suspend a project API key or make it active again",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "accountLevel",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"ACTIVE\" | \"SUSPENDED\"\n}"
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "3-Delete a project",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "accountLevel",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "4-Get information about a specific project or all projects",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "accountLevel",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				},
				{
					"name": "5-Generate a new API secret for a project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-OPENTOK-AUTH",
								"type": "text",
								"value": "{{jwt}}"
							},
							{
								"key": "accountLevel",
								"value": "true",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{opentokBaseUrl}}{{v2}}/refreshSecret",
							"host": [
								"{{opentokBaseUrl}}{{v2}}"
							],
							"path": [
								"refreshSecret"
							]
						},
						"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
					},
					"response": []
				}
			]
		},
		{
			"name": "Insights",
			"item": [
				{
					"name": "Obtaining Project Data",
					"item": [
						{
							"name": "Get streamed published minutes and streamed subscribed minutes for clients using the OpenTok JavaScript, Android, and iOS SDKs",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OPENTOK-AUTH",
										"value": "{{jwt}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query ($PROJECT_ID: Int!, $START_TIME: Date!) {\n    project(projectId: $PROJECT_ID) {\n      projectData(\n      start: $START_TIME,\n      interval: MONTHLY,\n      sdkType: [JS, ANDROID, IOS],\n      groupBy: SDK_TYPE\n    ) {\n      resources {\n        intervalStart,\n        intervalEnd,\n        usage {\n          streamedPublishedMinutes,\n          streamedSubscribedMinutes\n        }\n      }\n    }\n  }\n}",
										"variables": "{\n    \"PROJECT_ID\": {{projectApiKey}},\n    \"START_TIME\": \"2019-01-01T08:00:00.000Z\"\n}"
									}
								},
								"url": {
									"raw": "{{opentokInsightsBaseUrl}}",
									"host": [
										"{{opentokInsightsBaseUrl}}"
									]
								},
								"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
							},
							"response": []
						},
						{
							"name": "Get pagination info along with the first 10 matching ProjectData resources",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OPENTOK-AUTH",
										"value": "{{jwt}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query ($PROJECT_ID: Int!, $START_TIME: Date!) {\n    project(projectId: $PROJECT_ID) {\n      projectData(\n      start: $START_TIME,\n      first: 10,\n      interval: MONTHLY,\n\n    ) {\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      resources {\n        usage {\n          streamedPublishedMinutes\n        }\n      }\n    }\n  }\n}",
										"variables": "{\n    \"PROJECT_ID\": {{projectApiKey}},\n    \"START_TIME\": \"2019-01-01T08:00:00.000Z\"\n}"
									}
								},
								"url": {
									"raw": "{{opentokInsightsBaseUrl}}",
									"host": [
										"{{opentokInsightsBaseUrl}}"
									]
								},
								"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
							},
							"response": []
						},
						{
							"name": "Get the next page",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OPENTOK-AUTH",
										"value": "{{jwt}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query ($PROJECT_ID: Int!) {\n    project(projectId: $PROJECT_ID) {\n      projectData(\n      start: 0,\n      first: 10,\n      interval: MONTHLY,\n      endCursor: \"aW5zaWdodHMtcmVzb3VyY2U6MTA=\"\n\n    ) {\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      resources {\n        usage {\n          streamedPublishedMinutes,\n          streamedSubscribedMinutes\n        }\n      }\n    }\n  }\n}",
										"variables": "{\n    \"PROJECT_ID\": {{projectApiKey}}\n}"
									}
								},
								"url": {
									"raw": "{{opentokInsightsBaseUrl}}",
									"host": [
										"{{opentokInsightsBaseUrl}}"
									]
								},
								"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
							},
							"response": []
						}
					]
				},
				{
					"name": "Obtaining Session Data (Advanced Insights)",
					"item": [
						{
							"name": "Get publisher details on two OpenTok sessions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OPENTOK-AUTH",
										"value": "{{jwt}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query ($PROJECT_ID: Int!, $SESSION_ID_1: String!, $SESSION_ID_2: String!) {\n    project(projectId: $PROJECT_ID) {\n      sessionData {\n            sessions(sessionIds: [\n                $SESSION_ID_1,\n                $SESSION_ID_2\n            ]) {\n                resources {\n                    sessionId\n                    meetings {\n                        totalCount\n                        resources {\n                            createdAt\n                            publisherMinutes\n                            destroyedAt\n                            publishers {\n                                resources {\n                                    createdAt\n                                    destroyedAt\n                                    connectionId\n                                    stream {\n                                      streamId\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n  }\n}",
										"variables": "{\n    \"PROJECT_ID\": {{projectApiKey}},\n    \"SESSION_ID_1\": \"2_MX40NzAxNzcwNH5-MTY0NDUwNTc5NTAwOH4vZGhWSGNWZG9BK0p6a25RdnEwM2VhOTN-fg\",\n    \"SESSION_ID_2\": \"1_MX40NzAxNzcwNH5-MTY0NDUwNTgzMTgwNH5GeEJuaVF4Ymo1TnI4V240NkYxTWc0TXV-fg\"\n}"
									}
								},
								"url": {
									"raw": "{{opentokInsightsBaseUrl}}",
									"host": [
										"{{opentokInsightsBaseUrl}}"
									]
								},
								"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
							},
							"response": []
						},
						{
							"name": "Get the periodic audio and video bitrate statistics for publishers in an OpenTok session",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OPENTOK-AUTH",
										"value": "{{jwt}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query ($PROJECT_ID: Int!, $SESSION_ID: String!) {\n    project(projectId: $PROJECT_ID) {\n      sessionData {\n      sessions(sessionIds: [\n        $SESSION_ID,\n      ]) {\n        resources {\n          sessionId\n          meetings {\n            resources {\n              createdAt\n              publishers {\n                resources {\n                  createdAt\n                  connectionId\n                  stream {\n                    streamId\n                  }\n                  streamStatsCollection {\n                    resources {\n                      createdAt\n                      audioBitrateKbps\n                      videoBitrateKbps\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
										"variables": "{\n    \"PROJECT_ID\": {{projectApiKey}},\n    \"SESSION_ID\": \"2_MX40NzAxNzcwNH5-MTY0NDUwNTc5NTAwOH4vZGhWSGNWZG9BK0p6a25RdnEwM2VhOTN-fg\"\n}"
									}
								},
								"url": {
									"raw": "{{opentokInsightsBaseUrl}}",
									"host": [
										"{{opentokInsightsBaseUrl}}"
									]
								},
								"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
							},
							"response": []
						},
						{
							"name": "Get session summary information",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-OPENTOK-AUTH",
										"value": "{{jwt}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query ($PROJECT_ID: Int!, $START_TIME: Date!) {\n    project(projectId: $PROJECT_ID) {\n      sessionData {\n             sessionSummaries (\n                 start: $START_TIME,\n             ) {\n                 resources {\n                     sessionId\n                     meetings {\n                         resources {\n                             maxConcurrentStreams\n                             maxConcurrentStreams\n                             maxConcurrentSubscribers\n                             totalStreams\n                             totalConnections\n                         }\n                    }\n                }\n            }\n        }\n  }\n}",
										"variables": "{\n    \"PROJECT_ID\": {{projectApiKey}},\n    \"START_TIME\": \"2019-01-01T08:00:00.000Z\"\n}"
									}
								},
								"url": {
									"raw": "{{opentokInsightsBaseUrl}}",
									"host": [
										"{{opentokInsightsBaseUrl}}"
									]
								},
								"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"/**",
					" * Vonage",
					" * Video API",
					" * REST API ",
					" * ",
					" * https://tokbox.com/developer/rest/",
					" * ",
					" * Postman pre-request script ",
					" * generates JWT automatically",
					" * ",
					" * Created by: Yukari Dumburs",
					" * Date: Wed 19 Jan 2022",
					" */",
					"",
					"var accountLevel = pm.request.headers.get('accountLevel');",
					"if (accountLevel == \"true\") {",
					"    // console.log(\"use account-level credential\");",
					"    generateAccountLevelToken();",
					"} else {",
					"    // console.log(\"use project-level credential\");",
					"    generateProjectLevelToken();",
					"}",
					"",
					"function generateAccountLevelToken() {",
					"    // Set JWT claims",
					"    var apiSecret = pm.environment.get('accountApiSecret');",
					"    var currentTimestamp = Math.floor(Date.now() / 1000);",
					"    var expiryTimestamp = currentTimestamp + 5;",
					"    var header = {",
					"        'typ': 'JWT',",
					"        'alg': 'HS256'",
					"    }",
					"    var payload = {",
					"        'iss': pm.environment.get('accountApiKey'),",
					"        'ist': 'account',",
					"        'iat': currentTimestamp,",
					"        'exp': expiryTimestamp,",
					"        'jti': pm.environment.get('jti')",
					"    }",
					"",
					"    function base64url(source) {",
					"        // Encode in classical base64",
					"        encodedSource = CryptoJS.enc.Base64.stringify(source);",
					"",
					"        // Remove padding equal characters",
					"        encodedSource = encodedSource.replace(/=+$/, '');",
					"",
					"        // Replace characters according to base64url specifications",
					"        encodedSource = encodedSource.replace(/\\+/g, '-');",
					"        encodedSource = encodedSource.replace(/\\//g, '_');",
					"",
					"        return encodedSource;",
					"    }",
					"",
					"    // Encode header",
					"    var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header));",
					"    var encodedHeader = base64url(stringifiedHeader);",
					"",
					"    // Encode payload",
					"    var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(payload));",
					"    var encodedData = base64url(stringifiedData);",
					"",
					"    // Build token",
					"    var token = `${encodedHeader}.${encodedData}`;",
					"",
					"    // Sign token",
					"    var signature = CryptoJS.HmacSHA256(token, apiSecret);",
					"    signature = base64url(signature);",
					"    var signedToken = `${token}.${signature}`;",
					"    pm.environment.set('jwt', signedToken);",
					"    console.log('JWT: ', signedToken);",
					"};",
					"",
					"function generateProjectLevelToken() {",
					"    // Set JWT claims",
					"    var apiSecret = pm.environment.get('projectApiSecret');",
					"    var currentTimestamp = Math.floor(Date.now() / 1000);",
					"    var expiryTimestamp = currentTimestamp + 5;",
					"    var header = {",
					"        'typ': 'JWT',",
					"        'alg': 'HS256'",
					"    }",
					"    var payload = {",
					"        'iss': pm.environment.get('projectApiKey'),",
					"        'ist': 'project',",
					"        'iat': currentTimestamp,",
					"        'exp': expiryTimestamp,",
					"        'jti': pm.environment.get('jti')",
					"    }",
					"",
					"    function base64url(source) {",
					"        // Encode in classical base64",
					"        encodedSource = CryptoJS.enc.Base64.stringify(source);",
					"",
					"        // Remove padding equal characters",
					"        encodedSource = encodedSource.replace(/=+$/, '');",
					"",
					"        // Replace characters according to base64url specifications",
					"        encodedSource = encodedSource.replace(/\\+/g, '-');",
					"        encodedSource = encodedSource.replace(/\\//g, '_');",
					"",
					"        return encodedSource;",
					"    }",
					"",
					"    // Encode header",
					"    var stringifiedHeader = CryptoJS.enc.Utf8.parse(JSON.stringify(header));",
					"    var encodedHeader = base64url(stringifiedHeader);",
					"",
					"    // Encode payload",
					"    var stringifiedData = CryptoJS.enc.Utf8.parse(JSON.stringify(payload));",
					"    var encodedData = base64url(stringifiedData);",
					"",
					"    // Build token",
					"    var token = `${encodedHeader}.${encodedData}`;",
					"",
					"    // Sign token",
					"    var signature = CryptoJS.HmacSHA256(token, apiSecret);",
					"    signature = base64url(signature);",
					"    var signedToken = `${token}.${signature}`;",
					"    pm.environment.set('jwt', signedToken);",
					"    console.log('JWT: ', signedToken);",
					"};"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "opentokBaseUrl",
			"value": "https://api.opentok.com"
		},
		{
			"key": "v2",
			"value": "/v2/project/{{projectApiKey}}"
		},
		{
			"key": "opentokInsightsBaseUrl",
			"value": "https://insights.opentok.com/graphql",
			"type": "string"
		}
	]
}